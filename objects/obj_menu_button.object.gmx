<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// defines a "hovering over" variable

self.hover = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// if pressed then do something

var menu_length = array_length_1d(global.menu);
for (i = 0; i &lt; menu_length; i++) {
    if name == global.menu[i] {
        menu_item = i;
    }
}

var click = mouse_check_button_pressed(mb_left);

// self.hover is from the draw event, checks for hover
if self.hover &amp;&amp; click {
    switch menu_item {
        case 0: room_goto(rm_Lobby); break;
        case 1: break;
        case 2: break;
        case 3: game_end(); break;
        case 4: room_goto(rm_Main); break;
        case 5: break;
        case 6: break;
        case 7: room_goto(rm_start_menu); break;
        default: break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// draws the buttons
// bounds of the box based on length of string
var button_height = string_height(name);
var button_width = string_width(name);
var boxspace = 3;

// draws a background box, then adds the text, then highlights if cursor is over it
draw_set_color(c_gray);
draw_set_alpha(.9);
draw_rectangle(x - boxspace, y - boxspace, x + button_width + boxspace, y + button_height + boxspace, 0);
draw_set_alpha(1);

draw_set_color(c_white);
draw_text(x, y, name);

if (abs(mouse_x - x - button_width/2) &lt; button_width/2 + 2*boxspace) &amp;&amp; (abs(mouse_y - y - button_height/2) &lt; button_height/2 + 2*boxspace) {
        // highlights anything hovered over
        draw_set_color(c_white);
        draw_set_alpha(.6);
        draw_rectangle(x - boxspace, y - boxspace, x + button_width + boxspace, y + button_height + boxspace, 0);
        draw_set_alpha(1);
        self.hover = true;
}
else {
    self.hover = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
