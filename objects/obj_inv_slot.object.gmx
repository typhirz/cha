<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1001</depth>
  <persistent>0</persistent>
  <parentName>obj_UI</parentName>
  <maskName>spr_inv_border</maskName>
  <events>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var item =  global.inventory[slot[0], slot[1]];
var click = mouse_check_button_pressed(mb_left);
var release = mouse_check_button_released(mb_left);

if showInv {
    if (abs(mouse_x - x - 25.5) &lt; 24) &amp;&amp; (abs(mouse_y - y - 25.5) &lt; 24) {
        // highlights anything hovered over
        draw_set_color(c_white);
        draw_set_alpha(.6);
        draw_rectangle(x+3, y+3, x + 48, y + 48, 0);
        draw_set_alpha(1);
    
        // click sets mouseItem and deletes the item in inv
        if click {
            mouseItem = item;
            if item[0] != -1 &amp;&amp; item[1] != 0 {
                scr_itemdrop_slot(slot[0], slot[1]);
            }
        }
        // release deletes mouseItem and adds the mouseItem to the inv
        if release {
            if mouseItem[0] != -1 || mouseItem[1] != 0 {
                scr_itempickup_slot(mouseItem[0], mouseItem[1], slot[0], slot[1])
            }
            mouseItem = scr_item(-1, 0);
        }    
    }

    // simply draws the sprites
    if item[0] != -1 &amp;&amp; item[1] != 0 {
        scr_draw_icon(spr_items, item[0], x + 25, y + 25);
    }
}

// note: a special case of releasing a mouseItem when the inventory is closed
// is handled at the end of obj_inventory's Draw function code
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
